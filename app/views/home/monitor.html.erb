<%= render 'layouts/page_header', :title => 'Chat Monitor', :icon => 'fa-comments' %>

<div class="row">
  <div class="col-sm-4">
    <div class="jarviswidget" id="your-chats">

      <header role="heading">
        <h2> <%= current_agent.display_name %></h2>
        <div class="widget-toolbar">
          <%= render 'agent_status'%>
        </div>
      </header>

      <div role="content">
        <div class="widget-body no-padding">
          <div class="people-container">
            <div class="people-header">Current Chats</div>
            <div id="current-chat-container">
              <%= image_tag "select2-spinner.gif", :id => "current-chat-loading" %>
              <div id="no-current-chats-msg" class="chat-container-status">No current chats</div>
            </div>

            <div class="people-header">Waiting to Chat</div>
            <div id="waiting-to-chat-container">
              <%= image_tag "select2-spinner.gif", :id => "waiting-to-chat-loading" %>
              <div id="no-waiting-chats-msg" class="chat-container-status">No one is currently waiting to chat</div>
            </div>

            <div class="people-header">Visitors</div>
            <div id="visitor-container">
              <%= image_tag "select2-spinner.gif", :id => "no-chat-loading" %>
              <div id="no-visitor-msg" class="chat-container-status">No current visitors</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-sm-8">
    <div id="no-active-chat" class="no-chats">
      <div class="jarviswidget" id="your-chats" data-widget-editbutton="false" data-widget-fullscreenbutton="false">

        <header role="heading">
          <span class="widget-icon"> <i class="fa fa-comments"></i> </span>
          <h2>No Active Chats</h2>
        </header>

        <div role="content">
          <div class="widget-body widget-hide-overflow">
            <div class="no-chats">
              <div class="alert alert-info alert-block">
                <h4 class="alert-heading">No Active Chats</h4>
                Go grab a coffee and relax, you have no active chats at this time.
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="tab-content" id="active-chat-tabs" style="display: none;">
      <div class="tab-pane active" id="hr1">

        <div class="tabbable tabs-below" id="tabs">
          <div class="tab-content">

          </div>
          <ul class="nav nav-tabs">

          </ul>
        </div>
      </div>
    </div>
  </div>
</div>

<div style="display: none;">

  <div id="confirmCloseTab" title="Close this chat tab?">
    <p><span class="ui-icon ui-icon-alert" style="float:left; margin:0 7px 20px 0;"></span>Are you sure you want to close
      this chat tab?  <b>Warning: if this chat is active, closing the tab will cancel the chat.</b></p>
  </div>

  <div id="confirmInvite" title="Invite selected visitor?">
    <p><span class="ui-icon ui-icon-alert" style="float:left; margin:0 7px 20px 0;"></span>Are you sure you
    want to send this website visitor a chat invitation popup?</p>
  </div>

  <div id="chat-invite-unavailable" title="Chat Invite Unavailable">
    <p>Only paid accounts have access to the chat invitation features.  Please upgrade your account to access
    this and many more features.</p>
  </div>

</div>


<div id="audio-settings-dialog" title="Audio Settings" class="ui-dialog" style="display: none;">

	<form>
		<h5>Alert me with a sound when:</h5>
		<p style="padding-left: 10px;">
			<label for="active_chat_sound">A new message arrives in the selected chat</label>
			<input type="checkbox" name="active_chat_sound" id="active_chat_sound" class="text ui-widget-content ui-corner-all" />
		</p>
		<p style="padding-left: 10px;">
			<label for="background_chat_sound">A new message arrives in a background chat</label>
			<input type="checkbox" name="background_chat_sound" id="background_chat_sound"  class="checkbox ui-widget-content ui-corner-all" />
		</p>
		<p style="padding-left: 10px;">
			<label for="visitor_arrived_sound">A new visitor arrives on the website</label>
			<input type="checkbox" name="visitor_arrived_sound" id="visitor_arrived_sound"  class="checkbox ui-widget-content ui-corner-all" />
		</p>
	</form>
</div>

<script>

(function(ProvideChat, $,undefined) {
  "use strict";

  ProvideChat.agent_id = 0;
  ProvideChat.agent_name = '';
  ProvideChat.organization_id = 0;
  ProvideChat.initialized = false;

  ProvideChat.activeChatId = 0;	// the chat id of the currently active tab

  ProvideChat.chatStatus = [];	// associate array holding the status of all active chats - chatStatus[chatId] = status

  ProvideChat.chatTimer = [];	// array of timers for each active chat - chatTimer[chatId]
  ProvideChat.keypressStatusTimer = [];	// array of timers for getting the keypress status of each active chat: keypressStatusTimer[chatId]
  ProvideChat.clearKeypressTimer = [];		// array of timers for clearing an agent keypress state
  ProvideChat.visitorWaitingTimer;
  ProvideChat.visitorTimer;	// timer that controls the visitor info updates


  ProvideChat.numChats = 0;

  ProvideChat.init = function (agent_id, agent_name, organization_id) {
    if (ProvideChat.initialized === false) {
      ProvideChat.agent_id = agent_id;
      ProvideChat.agent_name = agent_name;
      ProvideChat.organization_id = organization_id;

      loadCurrentChats();
      updateVisitors();

      ProvideChat.visitorTimer = setInterval(function(){updateVisitors();}, 2000);
      ProvideChat.initialized = true;
    }
  };

  function loadCurrentChats () {

    var json_data = { "method": 'get_current_chats', "agent_id": ProvideChat.agent_id };

    $.getJSON("/api/chat_monitor.json", json_data, function (response) {

      $.each(response.current_chats, function(i, current_chat) {
        add_new_tab (current_chat.id, current_chat.visitor_id, current_chat.visitor_name, current_chat.status);
      });
    });
  }

  function updateInChat(visitor) {

    if ($("#waiting-to-chat-visitor-" + visitor.id).length > 0) {
      $("#waiting-to-chat-visitor-" + visitor.id).remove();
    }

    if ($("#in-chat-visitor-" + visitor.id).length > 0) {
      $("#visitor-detail-" + visitor.id).html(visitor.status_extended);
    } else {
      var visitor_content = '<%= image_tag "monitor/current-chat.png", class: "visitor-image" %>';
      visitor_content += '<span class="visitor-name">' + visitor.name + '</span>&nbsp;&nbsp;';
      visitor_content += '<span class="visitor-detail" id="visitor-detail-' + visitor.id + '">' + visitor.status_extended + '</span>&nbsp;&nbsp;';
      visitor_content += '<a href="javascript:void(0);" id="view_visitor_' + visitor.id + '" data-visitor-id="' + visitor.id + '" data-chat-id="' + visitor.chat_id + '" data-visitor-name="' + visitor.name + '" data-chat-status="' + visitor.chat.status + '" class="btn btn-default btn-xs" style="float: right;"><i class="fa fa-user"></i> View</a>';

      $('#current-chat-container').append("<div id='in-chat-visitor-" + visitor.id + "' class='visitor-snapshot'></div>");
      $("#in-chat-visitor-" + visitor.id).html(visitor_content);

      $('#view_visitor_' + visitor.id).click(function() {
        add_new_tab ($(this).data("chat-id"), $(this).data("visitor-id"), $(this).data("visitor-name"), $(this).data("chat-status"));
      });
    }
  }
  
  function waitingToChatAlert() {

    console.log("waiting to chat alert");
    $.bigBox({
      title : "A visitor is waiting to chat",
      color : "#296191",
    	timeout: 8000
    });
  }

  function updateWaitingToChat(visitor) {

    if ($("#no-chat-visitor-" + visitor.id).length > 0) {
      $("#no-chat-visitor-" + visitor.id).remove();
    }

    if ($("#waiting-to-chat-visitor-" + visitor.id).length > 0) {
      $("#visitor-detail-" + visitor.id).html(visitor.status_extended);
    } else {
      waitingToChatAlert();
      clearInterval(ProvideChat.visitorWaitingTimer);
      ProvideChat.visitorWaitingTimer = setInterval(function(){waitingToChatAlert();}, 9000);

      var visitor_content = '<%= image_tag "monitor/waiting-to-chat.png", class: "visitor-image" %>';
      visitor_content += '<span class="visitor-name">' + visitor.name + '</span>&nbsp;&nbsp;';
      visitor_content += '<span class="visitor-detail" id="visitor-detail-' + visitor.id + '">' + visitor.status_extended + '</span>&nbsp;&nbsp;';
      visitor_content += '<a href="javascript:void(0);" id="accept_chat_' + visitor.id + '" data-visitor-id="' + visitor.id + '" class="btn btn-default btn-xs" style="float: right;"><i class="fa fa-comments-o"></i> Accept</a>';

      $('#waiting-to-chat-container').append("<div id='waiting-to-chat-visitor-" + visitor.id + "' class='visitor-snapshot'></div>");
      $("#waiting-to-chat-visitor-" + visitor.id).html(visitor_content);

      $('#accept_chat_' + visitor.id).click(function() {
        $(this).hide();
        accept_chat($(this).data("visitor-id"));
      });
    }
  }

  function updateNoChat(visitor) {

    if ($("#no-chat-visitor-" + visitor.id).length > 0) {
      $("#visitor-detail-" + visitor.id).html(visitor.current_page);
    } else {

      var visitor_content = '<%= image_tag "monitor/visitor-browsing.png", class: "visitor-image" %>';
      visitor_content += '<span class="visitor-location">' + visitor.city + ',' + visitor.country_name + '&nbsp;<img width="20px" height="20px" src="/images/flags/' + visitor.country_code + '.png" style="vertical-align: top;"></span>&nbsp;&nbsp;';
      //visitor_content += '<span class="visitor-detail" id="visitor-detail-' + visitor.id + '">' + visitor.current_page + '</span>&nbsp;&nbsp;';
      visitor_content += '<a href="javascript:void(0);" id="invite_chat_' + visitor.id + '" data-visitor-id="' + visitor.id + '" class="btn btn-default btn-xs" style="float: right;"><i class="fa fa-external-link"></i> Invite</a>';

      $('#visitor-container').append("<div id='no-chat-visitor-" + visitor.id + "' class='visitor-snapshot'></div>");
      $("#no-chat-visitor-" + visitor.id).html(visitor_content);

    }
  }

  function updateVisitors () {

    $.getJSON("/visitors.json", { "current": "true" }, function (results) {

      var in_chat = 0;
      var waiting_to_chat = 0;
      var visitors = 0;

      $('#current-chat-loading').hide();
      $('#waiting-to-chat-loading').hide();
      $('#no-chat-loading').hide();

      if (results.length == 0) {
        $('#no-current-chats-msg').show();
        $('#no-waiting-chats-msg').show();
        $('#no-visitor-msg').show();

        $('#current-chat-container').find(".visitor-snapshot").remove();
        $('#waiting-to-chat-container').find(".visitor-snapshot").remove();
        $('#visitor-container').find(".visitor-snapshot").remove();
      }

      $.each(results, function(i, visitor) {
        console.log(visitor);

        $('#no-current-chats-msg').hide();
        $('#no-waiting-chats-msg').hide();
        $('#no-visitor-msg').hide();

        if ((visitor.status === "in_chat") || (visitor.status === "chat_ended")) {

          updateInChat(visitor);
          in_chat++;

        }
        else if (visitor.status === "waiting_to_chat") {

          updateWaitingToChat(visitor);
          waiting_to_chat++;
        }
        else if (visitor.status === "no_chat") {

          updateNoChat(visitor);
          visitors++;
        }
      });

      if (in_chat === 0) {
        $('#no-current-chats-msg').show();
        $('#current-chat-container').find(".visitor-snapshot").remove();
      }
      if (waiting_to_chat === 0) {
        clearInterval(ProvideChat.visitorWaitingTimer);
        $('#no-waiting-chats-msg').show();
        $('#waiting-to-chat-container').find(".visitor-snapshot").remove();
      }
      if (visitors === 0) {
        $('#no-visitor-msg').show();
        $('#visitor-container').find(".visitor-snapshot").remove();
      }
    });
  }

  function processVisitorName(visitor) {
    var visitor_name = '';

    if (visitor.name) {
      visitor_name = visitor.name;
    } else {
      if (visitor.remote_host == 'Unknown Host') {
        visitor_name = visitor.remote_addr;
      } else {
        visitor_name = visitor.remote_host + " (" + visitor.remote_addr + ")";
      }
    }

    return visitor_name;
  }

  function processAgent(visitor) {
    if (visitor.chat_status == 'in_chat') {
      return visitor.agent.display_name;
    } else {
      return "None";
    }
  }

  function processDepartmentName(visitor) {
    var department = '';
    if (visitor.department) {
      department = visitor.department;
    } else {
      department = "Not specified";
    }

    return department;
  }

  function viewVisitor( visitor_id ) {

    $.getJSON("/visitors/" + visitor_id + ".json", {}, function (response) {
      var visitor = response.visitor;

      console.log (visitor);

      var visitorInfo = '';

      visitorInfo += "<h5>" + visitor.name + "'s Information</h5>";
      visitorInfo += '<div class="visitor-info-box">';
      visitorInfo += '<p><b>Email: </b>' + visitor.email + '</p>';
      visitorInfo += '<p><b>Department: </b>' + visitor.department + '</p>';
      visitorInfo += '<p><b>Location: </b>' + visitor.city + ', ' + visitor.region_name + ', ';
      visitorInfo +=  visitor.country_name + '&nbsp;&nbsp;<img width="20px" height="20px" src="/images/flags/' + visitor.country_code + '.png" style="vertical-align: top;">' + '</p>';
      visitorInfo += '</div>';
      visitorInfo += '<h5 style="padding-top: 10px;">Viewing Habits</h5>';
      visitorInfo += '<div class="visitor-info-box">';
      visitorInfo += '<p><b>Pages Viewed: </b>' + visitor.page_views + '</p>';
      visitorInfo += '<p><b>Time on Site: </b>' + visitor.time_since_created + '</p>';
      visitorInfo += '<p><b>Current Page: </b><a href="' + visitor.current_page + '" target="_blank" style="color: #0066CC;">' + visitor.current_page + '</a></p>';
      visitorInfo += '</div>';
      visitorInfo += '<h5 style="padding-top: 10px;">System Information</h5>';
      visitorInfo += '<div class="visitor-info-box">';
      visitorInfo += '<p><b>Screen Resolution: </b>' + visitor.screen_resolution + '</p>';
      visitorInfo += '<p><b>Browser: </b>' + visitor.browser_name + ' (Version ' + visitor.browser_version + ')';
      visitorInfo += '&nbsp;&nbsp;<img src="' + visitor.browser_image + '" height="16px" width="16px" style="vertical-align: top;">';
      visitorInfo += '<p><b>Operating System: </b>' + visitor.operating_system + '&nbsp;&nbsp;<img src="' + visitor.os_image + '" height="16px" width="16px" style="vertical-align: top;"></p>';
      visitorInfo += '</div>';

      $('#visitor-info-' + visitor.id).html(visitorInfo);
    });
  }

  function accept_chat( visitor_id ) {

    var msg = 'Chat has begun, click end chat button when done';
    var title = 'Chat Initiated';
    //displayMessage(title, msg);

    var json_data = { "method": 'accept_chat', "agent_id": ProvideChat.agent_id, "visitor_id": visitor_id, "agent_name": ProvideChat.agent_name };

    $.getJSON("/api/chat_monitor.json", json_data, function (response) {
      if (response.chat_id > 0) {
        ProvideChat.activeChatId = response.chat_id;
        add_new_tab (response.chat_id, response.visitor_id, response.visitor_name, 'in_progress');
      }
    });
  }

  function add_new_tab(chat_id, visitor_id, visitor_name, chat_status) {

    if ($("#chat_tab_" + chat_id).length === 0) {

      var json_data = { "method": 'get_chat_tab', "chat_id": chat_id, "visitor_id": visitor_id, "visitor_name": visitor_name, "chat_status": chat_status };

      $.getJSON("/api/chat_monitor.json", json_data, function (response) {

        var tabNum = ProvideChat.numChats;
        ProvideChat.numChats++;	// increment the number of chats

        var id = $(".nav-tabs").children().length; //think about it ;)
        var tabId = 'chat-container-' + id;
        console.log(tabId);
        console.log(response.visitor_name);
        $('.tab-content').append('<div class="tab-pane" id="' + tabId + '">' + response.html + '</div>');
        $('.nav-tabs').append('<li id="chat-tab-container-' + response.chat_id  + '"><a data-toggle="tab" id="chat_tab_' + response.chat_id + '" href="#chat-container-' + id + '">' + response.visitor_name + '</a></li>');

        // add this
        $('.nav-tabs li:nth-child(' + id + ') a').click();

        if (ProvideChat.numChats == 1) {
          $("#no-active-chat").hide();
          $('#active-chat-tabs').show();
          $('#tabs').tab('show');
        }
        $('#tabs a:last').tab('show');

        ProvideChat.chatStatus[response.chat_id] = response.chat_status;

        ProvideChat.activeChatId = response.chat_id;

        viewVisitor(response.visitor_id);

        if (response.chat_status == 'in_progress') {

          $('#send-message-' + response.chat_id).click(function() {
            sendChatText(response.chat_id);
          });

          $('#end-chat-' + response.chat_id).click(function() {
            endChat(response.chat_id);
          });

          getChatText( response.chat_id, true );
          setup_chat_keypress(chat_id)

          ProvideChat.chatTimer[response.chat_id] = setInterval(function(){ getChatText(response.chat_id, false); }, 2000);
          ProvideChat.keypressStatusTimer[response.chat_id] = setInterval(function () { getKeypressStatus(response.chat_id); }, 1500);
        } else if ((response.chat_status == 'agent_ended') || (response.chat_status == 'visitor_ended') || (response.chat_status == 'agent_timeout')) {
          load_finished_chat(response.chat_id);
        }
      });

    } else {

      $("#chat_tab_" + chat_id).tab('show');

    }
  }

  function setup_chat_keypress(chat_id) {
    if (ProvideChat.activeChatId == chat_id) {
      $('#chat-message-content-'+chat_id).focus();
    }

    $("#chat-message-content-"+chat_id).keyup(function (e) {

      if ((e.keyCode === 13) && (e.ctrlKey === true)) {
        $("#chat-message-content-"+chat_id).value += "\r\n";
      }
      else if (e.keyCode === 13) {
        sendChatText( chat_id );
        clearAgentKeypress(chat_id);
      } else {
        updateAgentKeypress(chat_id);
      }
    });
  }

  function load_finished_chat( chat_id) {

    var json_data = { "method": 'get_chat_messages', "chat_id": chat_id, "agent_id": ProvideChat.agent_id, "context" : "all" };
    var chatText = '';

    enable_close_chat_tab(chat_id);

    $.getJSON("/api/chat_monitor.json", json_data, function (response) {

      console.log(response);

      $("#chat-messages-"+chat_id).html('<div class="announcement">You are now chatting with ' + response.visitor_name + '</div>');

      $.each(response.messages, function(count, message) {

        console.log("MESSAGE: " + message.message);

        var message_timestamp = new Date(message.sent);

        if (message.sender === 'agent')
        {
          chatText += '<div class="message"><div class="message-text">';
          chatText += '<time>' +  formatAMPM(message_timestamp) + '</time>';
          chatText += '<a href="javascript:void(0);" class="username">' + message.user_name  + '</a> ' + message.message + '</div></div>';
        }
        else if (message.sender === "visitor")
        {
          chatText += '<div class="message"><div class="message-text">';
          chatText += '<time>' + formatAMPM(message_timestamp) + '</time>';
          chatText += '<a href="javascript:void(0);" class="username">' + message.user_name  + '</a> ' + message.message + '</div></div>';

          $('#typing-notification-' + chat_id).html ('');
        }
      });

      var end_message = '';
      if (response.status === 'agent_ended') {
        end_message = 'The chat has now ended';
      } else if (response.status === 'visitor_ended') {
        end_message = 'The visitor has now ended the chat.';
      } else if (response.status === 'visitor_timeout') {
        end_message = 'The visitor has left your website, ending the chat.';
      }
      var started_timestamp = new Date(response.started);

      chatText = '<div class="message"><div class="message-text">';
      chatText += '<h5>' + end_message +  '</h5><br><b>Chat Statistics:</b><br>';
      chatText += 'Chat started at ' + '<time>' +  formatAMPM(started_timestamp) + '</time><br>';
      chatText += 'Chat lasted for ' + response.duration + '</div></div>';

      $("#chat-messages-"+chat_id).append(chatText);
      $('#chat-messages-'+chat_id).animate({scrollTop: jQuery('#chat-messages-'+chat_id)[0].scrollHeight}, 0);

    });
  }

  //Gets the current messages from the server
  function getChatText( chat_id, get_all_messages ) {

    var json_data = { "method": 'get_chat_messages', "chat_id": chat_id, "agent_id": ProvideChat.agent_id, "context" : "unseen" };

    if (get_all_messages === true) {
      json_data.context = "all";
    }

    $.getJSON("/api/chat_monitor.json", json_data, function (response) {

      console.log(response);

      var chatText = '';
      var newMessageAlert = false;

      if ((get_all_messages === true) || ($("#chat-messages-"+chat_id).length === 0)) {
        $("#chat-messages-"+chat_id).html('<div class="announcement">You are now chatting with ' + response.visitor_name + '</div>');
      }

			// if we get some JSON messages returned then process and display them, otherwise
			// show the operator connection message

      ProvideChat.chatStatus[chat_id] = response.status;

      if (response.status === 'in_progress') {

        $.each(response.messages, function(count, message) {

          console.log("MESSAGE: ");
          console.log(message);

          var message_timestamp = new Date(message.sent);

          if (message.sender === 'agent')
          {
            chatText += '<div class="message"><div class="message-text">';
            chatText += '<time>' +  formatAMPM(message_timestamp) + '</time>';
            chatText += '<a href="javascript:void(0);" class="username">' + message.user_name  + '</a> ' + message.message + '</div></div>';
          }
          else if (message.sender === "visitor")
          {
            chatText += '<div class="message"><div class="message-text">';
            chatText += '<time>' + formatAMPM(message_timestamp) + '</time>';
            chatText += '<a href="javascript:void(0);" class="username">' + message.user_name  + '</a> ' + message.message + '</div></div>';

            $('#typing-notification-' + chat_id).html ('');

            newMessageAlert = true;
          }
        });
      } else if ((response.status === 'agent_ended') || (response.status === 'visitor_ended') ||
                   (response.status === 'visitor_timeout'))
      {
        var end_message = '';
        if (response.status === 'agent_ended') {
          end_message = 'The chat has now ended.';
        } else if (response.status === 'visitor_ended') {
          end_message = 'The visitor has now ended the chat.';
        } else if (response.status === 'visitor_timeout') {
          end_message = 'The visitor has left your website, ending the chat.';
        }
        var started_timestamp = new Date(response.started);

        chatText = '<div class="message"><div class="message-text">';
        chatText += '<h5>' + end_message +  '</h5><br><b>Chat Statistics:</b><br>';
        chatText += 'Chat started at <time>' +  formatAMPM(started_timestamp) + '</time><br>';
        chatText += 'Chat lasted for ' + response.duration + '</div></div>';

        console.log("ChatID: " + chat_id + ", Clearing Interval ID: " + ProvideChat.chatTimer[chat_id]);
        clearInterval(ProvideChat.chatTimer[chat_id]);
        clearInterval(ProvideChat.keypressStatusTimer[chat_id]);
        $('#typing-notification-' + chat_id).html ('');

        enable_close_chat_tab(chat_id);
      }

      if (chatText.length > 0) {
        $("#chat-messages-"+chat_id).append(chatText);
        $('#chat-messages-'+chat_id).animate({scrollTop: jQuery('#chat-messages-'+chat_id)[0].scrollHeight}, 0);
      }

      /*
      if ((newMessageAlert === true) && (chatStatus[chat_id] === 'inProgress')) {
				if (activeChatId != chatId)  {
					var msg = 'New Message from ' + msg_user;
					var title = 'New Message';
					displayMessage(title, msg);

					// Play new message sound for background chat
					if ($("#background_chat_sound").attr("checked") === true) {
						soundManager.play('new_message2');
					}
				} else {

					// Play new message sound for background chat
					if ($("#active_chat_sound").attr("checked") === true) {
						soundManager.play('new_message1');
					}
				}
      }
      */
    });
  }

  function getKeypressStatus(chat_id) {

    var json_data = { "method": 'get_visitor_typing', "chat_id": chat_id };

    $.getJSON("/api/chat_monitor.json", json_data, function (response) {
      var chat_id = response.chat_id;

      if (response.visitor_typing == 'yes' ) {
        $('#typing-notification-' + chat_id).html ('<i>' + response.visitor_name + ' is typing...</i>');
      } else {
        $('#typing-notification-' + chat_id).html ('');
      }
    });
  }

  function sendChatText(chat_id) {

    if (ProvideChat.chatStatus[chat_id] === 'in_progress') {
      var message = $("#chat-message-content-" + chat_id).val();

      if ((message.length === 0) || (message === "%0A") || (message === "%0A%0D")) {
        $('#chat-message-content-' + chat_id).val('');
        $('#chat-message-content-' + chat_id).focus();
      } else {

        var msg_text = $('#chat-message-content-' + chat_id).val();

        msg_text = msg_text.replace(/\r?\n|\r/g, "<br>");

        $('#chat-message-content-' + chat_id).val('');
        $('#chat-message-content-' + chat_id).focus();

        var json_data = { "method" : "agent_message", "org_id" : ProvideChat.org_id, "website_id" : ProvideChat.website_id,
                          "chat_id": chat_id, "message" : message, "agent_name" : ProvideChat.agent_name };

        $.getJSON("/api/chat_monitor.json", json_data, function (response) {
          console.log(response);

          getChatText(response.chat_id, false);
        });

      }
    } else if (ProvideChat.chatStatus[chat_id] === 'not_started') {
      alert ("You must accept a chat before sending a message");
    } else if ((ProvideChat.chatStatus[chat_id] === 'agent_ended') || (ProvideChat.chatStatus[chat_id] === 'visitor_ended') ||
              (ProvideChat.chatStatus[chat_id] === 'agent_timeout') || (ProvideChat.chatStatus[chat_id] === 'visitor_timeout'))
    {
      alert ("This chat has now ended");
    }
  }

  function inviteVisitor(visitor_id)
  {
    var edition = $("#edition").val();

    if (edition === 'free') {
      $("#chat-invite-unavailable").dialog('open');
    } else {

      if (visitor_id > 0) {

        $.ajax({
          type: "POST",
          dataType: "json",
          url: "process-chat.php",
          data: "visitorId=" + visitor_id + "&operatorId=" + operatorId + "&action=send_invite",
          success: function (json) {

            if (json) {

              if (json.result === 'invitation_sent') {
                displayMessage('Invitation Sent!', 'You just sent a chat invitation to the selected visitor');
              } else if (json.result === 'invitation_already_sent') {
                displayMessage('Invitation Not Sent', 'This visitor has already been sent an invitation');
              } else if (json.result === 'operator_offline') {
                displayMessage('Invitation Not Sent', 'You need to be online in order to send an invitation');
              }

              inviteChatOff();
            }
          }
        });
      }
    }

    return true;
  }


  function endChat(chat_id) {

    var json_data = { "method": 'end_chat', "chat_id": chat_id };

    $.getJSON("/api/chat_monitor.json", json_data, function (response) {
      console.log(response);
      if (response.success == 'true') {
        enable_close_chat_tab(response.chat_id);
      }
    });
  }

  function enable_close_chat_tab(chat_id) {
    $('#close-tab-' + chat_id).removeClass('disabled');
    $('#close-tab-' + chat_id).prop('disabled', false);

    $('#end-chat-' + chat_id).addClass('disabled');
    $('#end-chat-' + chat_id).attr("disabled", "disabled");

    $('#close-tab-' + chat_id).click(function() {
      close_chat_tab(chat_id);
    });
  }

  function close_chat_tab(chat_id) {

    $('#chat-container-' + chat_id).remove();
    $('#chat-tab-container-' + chat_id).remove();

    if (ProvideChat.numChats > 0) {
      ProvideChat.numChats--;
    }

    if (ProvideChat.numChats == 0) {
      $('#active-chat-tabs').hide();
      $("#no-active-chat").show();
    }
  }


  function clearAgentKeypress(chat_id) {
    var json_data = { "method": 'update_agent_keypress', "chat_id": chat_id, "typing" : "no" };

    $.getJSON("/api/chat_monitor.json", json_data, function (response) {

    });
  }

  function updateAgentKeypress(chat_id) {

    var json_data = { "method": 'update_agent_keypress', "chat_id": chat_id, "typing" : "yes" };

    $.getJSON("/api/chat_monitor.json", json_data, function (response) {

      if (typeof ProvideChat.clearKeypressTimer[response.chat_id] != 'undefined') {
        clearTimeout(ProvideChat.clearKeypressTimer[response.chat_id]); 
      }
      ProvideChat.clearKeypressTimer[response.chat_id] = setTimeout(function () { clearAgentKeypress(response.chat_id); }, 2000);
    });
  }

  function formatAMPM(date) {
    var hours = date.getHours();
    var minutes = date.getMinutes();
    var ampm = hours >= 12 ? 'pm' : 'am';
    hours = hours % 12;
    hours = hours ? hours : 12; // the hour '0' should be '12'
    minutes = minutes < 10 ? '0'+minutes : minutes;
    var strTime = hours + ':' + minutes + ' ' + ampm;
    return strTime;
  }

})(window.ProvideChat = window.ProvideChat || {}, jQuery);

$( document ).ready(function() {
  ProvideChat.init (<%= current_agent.id %>, '<%= current_agent.display_name %>', <%= current_agent.organization_id %>);
});

$(window).bind('page:change', function() {
  ProvideChat.init (<%= current_agent.id %>, '<%= current_agent.display_name %>', <%= current_agent.organization_id %>);
});

</script>